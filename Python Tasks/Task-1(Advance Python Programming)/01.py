# -*- coding: utf-8 -*-
"""01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VJ71Fxpc5VucHrQY-T-1m47liy3mzNkd

# Topic :- Running Sum of 1d Array

**********************************************`Question`*****************************************************
### Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]â€¦nums[i]).

### Return the running sum of nums.

Input: nums = [1,2,3,4]<br>
Output: [1,3,6,10]<br>
Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].
"""

#LeetCode
# class Solution:
#     def runningSum(self, nums: List[int]) -> List[int]:
#         n = len(nums)
#         output_list = []
#
#         if n == 0:
#             return output_list
#         list_sum = 0
#         for i in range(n):
#             list_sum += nums[i]
#             output_list.append(list_sum)
#
#         return output_list

#LeetCode Executed
class Solution:
    def runningSum(nums):
        n = len(nums)
        output_list = []
        
        if n == 0:
            return output_list
        list_sum = 0
        for i in range(n):
            list_sum += nums[i]
            output_list.append(list_sum)
            
        return output_list

a = [1,2,3,4]
cls = Solution
res = cls.runningSum(a)
print(res)

